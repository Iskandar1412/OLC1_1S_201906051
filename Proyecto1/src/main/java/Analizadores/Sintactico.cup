
/*------------------------------1. Package e importaciones------------------------------*/
package Analizadores;
import java_cup.runtime.*;
import java.util.ArrayList;
import java.util.List;
import java.util.LinkedList;
import Project.errors.Error;
import Project.errors.Conj;
import Project.Siguientes.Follow;
import Project.Siguientes.Siguiente;
import Project.automatas.AFD.Aceptacion;
import Project.automatas.AFD.Automata;
import Project.automatas.AFD.Estado;
import Project.automatas.AFD.State;
import Project.automatas.AFD.Transicion;
import Project.automatas.Thompson.AutomataT;
import Project.automatas.Thompson.Nodo;
import Project.tree.Nodo;
import Project.tree.Tree;


/*------------------------------2. Codigo para el parser, variables, metodos------------------------------*/
parser code
{:
	//objetos, variables, ... sintaxis java
	public ArrayList<Error> err = new ArrayList<>(); //errores del sistema
	public ArrayList<Conj> con = new ArrayList<>(); //conjuntos que se generen
	public ArrayList<Thompson> thompson = new ArrayList<>();
	public ArrayList<Tree> tree = new ArrayList<>();
	public ArrayList<Follow> follow = new ArrayList<>();

	public void syntax_error(Symbol s) {
		if(s.value != null) {
			errors.add(new SyntaxError(s.value.toString(), s.left, s.right));
		}
	}
	public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception {
		throw new Exception("Error irrecuperable en la linea: " + s.left + ", columna: " s.right);
	}
:}


/*------------------------------3. Terminales------------------------------*/

terminal String CONJ;
terminal String PTCOMA,PARIZQ,PARDER,LLAVIZQ,LLAVDER,CORIZQ,CORDER;
terminal String MAS,MENOS,POR,DIVIDIDO,UMENOS;
terminal String MAYOR,COMA,APROX,COMILLA;
terminal String AND,OR,STARNO,SG_ADMIRACION,YY;
terminal String IDENT;
terminal String STRING,ENTERO,DECIMAL;
terminal String DOBPOR,DOBPT;


/*------------------------------4. No terminales------------------------------*/
non terminal ini;
non terminal inicio;
non terminal instrucciones;
non terminal instruccion;
non terminal conjunto;
non terminal conjuntoinst;
non terminal grupoconjunto;

non terminal numeros;
non terminal letras;
non terminal polacaexp;
non terminal polaco;

non terminal expresion;
non terminal expresiones;
non terminal comprobar;
non terminal finalizar;

non terminal pruebas;

/*non terminal Double expresion;*/

/*------------------------------5. Precedencias------------------------------*/

precedence left MAS,MENOS;
precedence left POR,DIVIDIDO;
precedence right UMENOS;

/*------------------------------6. Producciones------------------------------*/
start with ini;

ini::=LLAVIZQ inicio LLAVDER;

inicio::=
	conjunto expresion DOBPOR pruebas
;

conjunto::=
	CONJ DOBPT IDENT:a MENOS MAYOR gupoconjunto
	| conjunto
;